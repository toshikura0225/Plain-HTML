#define NUM_OF_SRC 13

// 平均値
//const double AVE[] = {20.36,33.34,182.7,13.09,21.72,44.85,31.42,0.97,0.46,2.59,2958.27,7.68,26.7};

// 標準偏差
//const double SD[] = {13.15,0.93,69.71,35.89,14,4.95,8.18,0.27,0.01,0.28,788.01,1.07,15.4};

// 相関行列の逆行列
double arrInverseMatrix[NUM_OF_SRC][NUM_OF_SRC] = {
	{78.27,9.45,5.9,-2.8,-64.78,27.92,5.69,-21.28,8.01,2.76,11.29,-34.07,-0.96},
	{9.45,39.7,-0.66,1.54,-12.19,-11.83,4.68,-0.24,34.1,16.85,3.3,-5.9,0.82},
	{5.9,-0.66,12.89,2.29,-3.34,10.17,0.81,-10.01,0.87,-1.42,-2.59,-8.46,-1.65},
	{-2.8,1.54,2.29,5.03,1.61,4,-1.46,-0.85,1.75,0.03,1.91,-2.53,1.24},
	{-64.78,-12.19,-3.34,1.61,63.72,-19.32,-11.56,13.16,-2.39,-8.61,-11.7,32.93,0.2},
	{27.92,-11.83,10.17,4,-19.32,136.7,-3.26,-20.38,-11.93,-100.37,6.49,-37.45,7.63},
	{5.69,4.68,0.81,-1.46,-11.56,-3.26,15.34,-2.78,-8.54,9.68,5.93,-11.28,-3.44},
	{-21.28,-0.24,-10.01,-0.85,13.16,-20.38,-2.78,23.67,7.08,-2.84,-0.61,22.54,-3.88},
	{8.01,34.1,0.87,1.75,-2.39,-11.93,-8.54,7.08,50.21,6.19,1.21,6.57,-3.31},
	{2.76,16.85,-1.42,0.03,-8.61,-100.37,9.68,-2.84,6.19,114.27,10.24,-17.02,-2.85},
	{11.29,3.3,-2.59,1.91,-11.7,6.49,5.93,-0.61,1.21,10.24,16.62,-21.94,-2.82},
	{-34.07,-5.9,-8.46,-2.53,32.93,-37.45,-11.28,22.54,6.57,-17.02,-21.94,63.51,-2.77},
	{-0.96,0.82,-1.65,1.24,0.2,7.63,-3.44,-3.88,-3.31,-2.85,-2.82,-2.77,7.61}
};

// MD値を取得する
double CalcMD(double arrSrc[], double AVE[], double SD[])
{
	double arrV[NUM_OF_SRC];	// 基準化データを算出する
	
	//if(sizeof(arrSrc) != 13)

	// 基準化データを算出する
	for(int i=0; i<NUM_OF_SRC; i++)
	{
		arrV[i] = (arrSrc[i] - AVE[i]) / SD[i];	// 基準化データ＝（測定値－平均値）／標準偏差
	}
	
	// 計算のための一時変数
	double temp = 0.0;				
	double arrTemp[NUM_OF_SRC];
	
	// V*inv(R)を計算する
	for(int i=0; i<NUM_OF_SRC; i++)
	{
		temp = 0.0;
		for(int j=0; j<NUM_OF_SRC; j++)
		{
			temp += arrV[j] * arrInverseMatrix[j][i];
		}
		arrTemp[i] = temp;
	}
	
	// V*inv(R)*Vtを計算する
	temp = 0.0;
	for(int i=0; i<NUM_OF_SRC; i++)
	{
		temp += arrTemp[i] * arrV[i];
		
	}
	
	// MD = (V*inv(R)*Vt) / k
	double MD = temp / NUM_OF_SRC;
	return MD;
}